// RUN: clang -cc1 -triple riscv32 -target-feature +m -target-feature +xcvnand -S -O3 %s -o - \
// RUN:     | FileCheck %s  -check-prefix=CHECK

// #include <stdbool.h>
//
// // CHECK-LABEL: nand_logical_bool:
// // CHECK-COUNT-1: cv.nand {{.*}}
// bool nand_logical_bool(bool a, bool b)
// {
//   return !(a && b);
// }
//
// // CHECK-LABEL: nand_logical_s32:
// // CHECK-COUNT-1: cv.nand {{.*}}
// signed int nand_logical_s32(signed int a, signed int b)
// {
//   return !(a && b);
// }
//
// // CHECK-LABEL: nand_logical_u32:
// // CHECK-COUNT-1: cv.nand {{.*}}
// unsigned int nand_logical_u32(unsigned int a, unsigned int b)
// {
//   return !(a && b);
// }
//
// // CHECK-LABEL: nand_logical_s8:
// // CHECK-COUNT-1: cv.nand {{.*}}
// signed char nand_logical_s8(signed char a, signed char b)
// {
//   return !(a && b);
//
// }
//
// // CHECK-LABEL: nand_logical_u8:
// // CHECK-COUNT-1: cv.nand {{.*}}
// unsigned char nand_logical_u8(unsigned char a, unsigned char b)
// {
//   return !(a && b);
//
// }

// CHECK-LABEL: nand_bitwise_s32:
// CHECK-COUNT-1: cv.nand_bitwise {{.*}}
signed int nand_bitwise_s32(signed int a, signed int b)
{
  return ~(a & b);
}

// CHECK-LABEL: nand_bitwise_u32:
// CHECK-COUNT-1: cv.nand_bitwise {{.*}}
unsigned int nand_bitwise_u32(unsigned int a, unsigned int b)
{
  return ~(a & b);
}

// // CHECK-LABEL: nand_bitwise_s8:
// // CHECK-COUNT-1: cv.nand {{.*}}
// signed char nand_bitwise_s8(signed char a, signed char b)
// {
//   return ~(a & b);
// }
//
// // CHECK-LABEL: nand_bitwise_u8:
// // CHECK-COUNT-1: cv.nand {{.*}}
// unsigned char nand_bitwise_u8(unsigned char a, unsigned char b)
// {
//   return ~(a & b);
// }
